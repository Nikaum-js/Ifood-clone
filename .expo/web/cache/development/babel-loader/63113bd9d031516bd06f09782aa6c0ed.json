{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nikaum/Projects/ifood-clone/src/components/Restaurants/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Container, Header, Title, RestaurantList, Item, ItemImage, ItemInfo, ItemTitle, ItemDescription, Star, Categories, Distance, Delay } from \"./styles\";\nimport api from \"../../services/api\";\nexport default function Restaurants(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      display = _ref.display;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurants = _useState2[0],\n      setRestaurants = _useState2[1];\n\n  useEffect(function () {\n    function loadRestaurants() {\n      var response;\n      return _regeneratorRuntime.async(function loadRestaurants$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('restaurants'));\n\n            case 2:\n              response = _context.sent;\n              setRestaurants(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    loadRestaurants();\n  }, []);\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, React.createElement(Header, {\n    display: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, title)), React.createElement(RestaurantList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }, restaurants.map(function (item) {\n    return React.createElement(Item, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      }\n    }, React.createElement(ItemImage, {\n      source: {\n        uri: item.restaurant_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }\n    }), React.createElement(ItemInfo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      }\n    }, React.createElement(ItemTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      }\n    }, item.title), React.createElement(ItemDescription, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"star\",\n      size: 20,\n      color: \"#ff7b00\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      }\n    }), React.createElement(Star, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      }\n    }, item.star ? item.star : 'Novo!', \" \"), React.createElement(Categories, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      }\n    }, item.categories, \" \"), React.createElement(Distance, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }\n    }, item.distance)), React.createElement(Delay, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      }\n    }, item.delay)));\n  })));\n}","map":{"version":3,"sources":["/home/nikaum/Projects/ifood-clone/src/components/Restaurants/index.js"],"names":["React","useState","useEffect","MaterialIcons","Container","Header","Title","RestaurantList","Item","ItemImage","ItemInfo","ItemTitle","ItemDescription","Star","Categories","Distance","Delay","api","Restaurants","title","display","restaurants","setRestaurants","loadRestaurants","get","response","data","map","item","id","uri","restaurant_url","star","categories","distance","delay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SACEC,SADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,cAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,SARF,EASEC,eATF,EAUEC,IAVF,EAWEC,UAXF,EAYEC,QAZF,EAaEC,KAbF;AAgBA,OAAOC,GAAP;AAEA,eAAe,SAASC,WAAT,OAAyC;AAAA;;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,kBAChBnB,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,MAC/CoB,WAD+C;AAAA,MAClCC,cADkC;;AAGtDpB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeqB,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBN,GAAG,CAACO,GAAJ,CAAQ,aAAR,CADzB;;AAAA;AACQC,cAAAA,QADR;AAGEH,cAAAA,cAAc,CAACG,QAAQ,CAACC,IAAV,CAAd;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAH,IAAAA,eAAe;AAChB,GAPQ,EAON,EAPM,CAAT;AASA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,KAAR,CADF,CADF,EAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,CAACM,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF,IAAI,CAACG;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYH,IAAI,CAACT,KAAjB,CADF,EAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,IAAI,EAAE,EAAjC;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOS,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACI,IAAjB,GAAwB,OAA/B,MAFF,EAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaJ,IAAI,CAACK,UAAlB,MAHF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWL,IAAI,CAACM,QAAhB,CAJF,CAFF,EAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQN,IAAI,CAACO,KAAb,CARF,CAFF,CADmB;AAAA,GAApB,CADH,CALF,CADF;AAyBD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport {\n  Container,\n  Header,\n  Title,\n  RestaurantList,\n  Item,\n  ItemImage,\n  ItemInfo,\n  ItemTitle,\n  ItemDescription,\n  Star,\n  Categories,\n  Distance,\n  Delay,\n} from './styles';\n\nimport api from '../../services/api';\n\nexport default function Restaurants({ title, display }) {\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    async function loadRestaurants() {\n      const response = await api.get('restaurants');\n\n      setRestaurants(response.data);\n    }\n    loadRestaurants();\n  }, []);\n\n  return (\n    <Container>\n      <Header display={display}>\n        <Title>{title}</Title>\n      </Header>\n\n      <RestaurantList>\n        {restaurants.map(item => (\n          <Item key={item.id}>\n            <ItemImage source={{ uri: item.restaurant_url }} />\n            <ItemInfo>\n              <ItemTitle>{item.title}</ItemTitle>\n              <ItemDescription>\n                <MaterialIcons name=\"star\" size={20} color=\"#ff7b00\" />\n                <Star>{item.star ? item.star : 'Novo!'} </Star>\n                <Categories>{item.categories} </Categories>\n                <Distance>{item.distance}</Distance>\n              </ItemDescription>\n              <Delay>{item.delay}</Delay>\n            </ItemInfo>\n          </Item>\n        ))}\n      </RestaurantList>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}