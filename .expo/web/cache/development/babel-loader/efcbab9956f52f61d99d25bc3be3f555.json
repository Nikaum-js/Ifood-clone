{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/nikaum/Projects/desafio-quaq/node_modules/@react-navigation/native/dist/Themed.js\";\nimport * as React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ThemeContext, ThemeColors } from '@react-navigation/core';\n\nvar ThemedText = function (_React$Component) {\n  _inherits(ThemedText, _React$Component);\n\n  function ThemedText() {\n    _classCallCheck(this, ThemedText);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThemedText).apply(this, arguments));\n  }\n\n  _createClass(ThemedText, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, _extends({}, this.props, {\n        style: [{\n          color: ThemeColors[this.context].label\n        }, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ThemedText;\n}(React.Component);\n\nThemedText.contextType = ThemeContext;\n\nvar ThemedTextInput = function (_React$Component2) {\n  _inherits(ThemedTextInput, _React$Component2);\n\n  function ThemedTextInput() {\n    _classCallCheck(this, ThemedTextInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThemedTextInput).apply(this, arguments));\n  }\n\n  _createClass(ThemedTextInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TextInput, _extends({}, this.props, {\n        placeholderTextColor: this.context === 'dark' ? '#ebebf54c' : '#3c3c434c',\n        style: [{\n          color: ThemeColors[this.context].label\n        }, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ThemedTextInput;\n}(React.Component);\n\nThemedTextInput.contextType = ThemeContext;\n\nvar ThemedStatusBar = function (_React$Component3) {\n  _inherits(ThemedStatusBar, _React$Component3);\n\n  function ThemedStatusBar() {\n    _classCallCheck(this, ThemedStatusBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ThemedStatusBar).apply(this, arguments));\n  }\n\n  _createClass(ThemedStatusBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          barStyle = _this$props.barStyle,\n          props = _objectWithoutProperties(_this$props, [\"barStyle\"]);\n\n      return React.createElement(StatusBar, _extends({\n        barStyle: barStyle ? barStyle : this.context === 'dark' ? 'light-content' : 'default'\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }));\n    }\n  }]);\n\n  return ThemedStatusBar;\n}(React.Component);\n\nThemedStatusBar.contextType = ThemeContext;\nexport default {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput\n};","map":{"version":3,"sources":["/home/nikaum/Projects/desafio-quaq/node_modules/@react-navigation/native/dist/Themed.js"],"names":["React","ThemeContext","ThemeColors","ThemedText","props","color","context","label","style","Component","contextType","ThemedTextInput","ThemedStatusBar","barStyle","Text","StatusBar","TextInput"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,wBAA1C;;IAEMC,U;;;;;;;;;;;6BAGK;AACP,aAAO,oBAAC,IAAD,eAAU,KAAKC,KAAf;AAAsB,QAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEH,WAAW,CAAC,KAAKI,OAAN,CAAX,CAA0BC;AAAnC,SAAD,EAA6C,KAAKH,KAAL,CAAWI,KAAxD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EALsBR,KAAK,CAACS,S;;AAAzBN,U,CACGO,W,GAAcT,Y;;IAOjBU,e;;;;;;;;;;;6BAGK;AACP,aAAO,oBAAC,SAAD,eAAe,KAAKP,KAApB;AAA2B,QAAA,oBAAoB,EAAE,KAAKE,OAAL,KAAiB,MAAjB,GAA0B,WAA1B,GAAwC,WAAzF;AAAsG,QAAA,KAAK,EAAE,CAAC;AAAED,UAAAA,KAAK,EAAEH,WAAW,CAAC,KAAKI,OAAN,CAAX,CAA0BC;AAAnC,SAAD,EAA6C,KAAKH,KAAL,CAAWI,KAAxD,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAL2BR,KAAK,CAACS,S;;AAA9BE,e,CACGD,W,GAAcT,Y;;IAOjBW,e;;;;;;;;;;;6BAGK;AAAA,wBACsB,KAAKR,KAD3B;AAAA,UACDS,QADC,eACDA,QADC;AAAA,UACYT,KADZ;;AAGP,aAAO,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAES,QAAQ,GAAGA,QAAH,GAAc,KAAKP,OAAL,KAAiB,MAAjB,GAA0B,eAA1B,GAA4C;AAAvF,SAAsGF,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAP2BJ,KAAK,CAACS,S;;AAA9BG,e,CACGF,W,GAAcT,Y;AASvB,eAAe;AACba,EAAAA,IAAI,EAAEX,UADO;AAEbY,EAAAA,SAAS,EAAEH,eAFE;AAGbI,EAAAA,SAAS,EAAEL;AAHE,CAAf","sourcesContent":["import * as React from 'react';\nimport { StatusBar, Text, TextInput } from 'react-native';\nimport { ThemeContext, ThemeColors } from '@react-navigation/core';\n\nclass ThemedText extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return <Text {...this.props} style={[{ color: ThemeColors[this.context].label }, this.props.style]} />;\n  }\n}\n\nclass ThemedTextInput extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    return <TextInput {...this.props} placeholderTextColor={this.context === 'dark' ? '#ebebf54c' : '#3c3c434c'} style={[{ color: ThemeColors[this.context].label }, this.props.style]} />;\n  }\n}\n\nclass ThemedStatusBar extends React.Component {\n  static contextType = ThemeContext;\n\n  render() {\n    let { barStyle, ...props } = this.props;\n\n    return <StatusBar barStyle={barStyle ? barStyle : this.context === 'dark' ? 'light-content' : 'default'} {...props} />;\n  }\n}\n\nexport default {\n  Text: ThemedText,\n  StatusBar: ThemedStatusBar,\n  TextInput: ThemedTextInput\n};"]},"metadata":{},"sourceType":"module"}