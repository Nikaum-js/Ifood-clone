{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nvar add = Animated.add;\nexport function forUIKit(_ref) {\n  var current = _ref.current,\n      next = _ref.next,\n      layouts = _ref.layouts;\n  var defaultOffset = 100;\n  var leftSpacing = 27;\n  var leftLabelOffset = layouts.leftLabel ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing : defaultOffset;\n  var titleLeftOffset = layouts.title ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing : defaultOffset;\n  var rightOffset = layouts.screen.width / 4;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    leftLabelStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.isRTL ? [-rightOffset, 0, leftLabelOffset] : [leftLabelOffset, 0, -rightOffset]\n        })\n      }]\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0]\n      }),\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0.5, 1, 2],\n          outputRange: I18nManager.isRTL ? [-titleLeftOffset, 0, rightOffset] : [rightOffset, 0, -titleLeftOffset]\n        })\n      }]\n    },\n    backgroundStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.isRTL ? [-layouts.screen.width, 0, layouts.screen.width] : [layouts.screen.width, 0, -layouts.screen.width]\n        })\n      }]\n    }\n  };\n}\nexport function forFade(_ref2) {\n  var current = _ref2.current,\n      next = _ref2.next;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0]\n  });\n  return {\n    leftButtonStyle: {\n      opacity: opacity\n    },\n    rightButtonStyle: {\n      opacity: opacity\n    },\n    titleStyle: {\n      opacity: opacity\n    },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0]\n      })\n    }\n  };\n}\nexport function forSlide(_ref3) {\n  var current = _ref3.current,\n      next = _ref3.next,\n      screen = _ref3.layouts.screen;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL ? [-screen.width, 0, screen.width] : [screen.width, 0, -screen.width]\n  });\n  var transform = [{\n    translateX: translateX\n  }];\n  return {\n    leftButtonStyle: {\n      transform: transform\n    },\n    rightButtonStyle: {\n      transform: transform\n    },\n    titleStyle: {\n      transform: transform\n    },\n    backgroundStyle: {\n      transform: transform\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["HeaderStyleInterpolators.tsx"],"names":["add","Animated","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","titleLeftOffset","rightOffset","progress","inputRange","outputRange","extrapolate","leftButtonStyle","opacity","leftLabelStyle","transform","translateX","I18nManager","rightButtonStyle","titleStyle","backgroundStyle","screen"],"mappings":"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","sourcesContent":["import { Animated, I18nManager } from 'react-native';\nimport {\n  StackHeaderInterpolationProps,\n  StackHeaderInterpolatedStyle,\n} from '../types';\n\nconst { add } = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit({\n  current,\n  next,\n  layouts,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\n    : defaultOffset;\n  const titleLeftOffset = layouts.title\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\n    : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    leftLabelStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-rightOffset, 0, leftLabelOffset]\n              : [leftLabelOffset, 0, -rightOffset],\n          }),\n        },\n      ],\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0],\n      }),\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0.5, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-titleLeftOffset, 0, rightOffset]\n              : [rightOffset, 0, -titleLeftOffset],\n          }),\n        },\n      ],\n    },\n    backgroundStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-layouts.screen.width, 0, layouts.screen.width]\n              : [layouts.screen.width, 0, -layouts.screen.width],\n          }),\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade({\n  current,\n  next,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return {\n    leftButtonStyle: { opacity },\n    rightButtonStyle: { opacity },\n    titleStyle: { opacity },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0],\n      }),\n    },\n  };\n}\n\n/**\n * Simple translate animation to translate the header along with the sliding screen.\n */\nexport function forSlide({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL\n      ? [-screen.width, 0, screen.width]\n      : [screen.width, 0, -screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\nexport function forNoAnimation(): StackHeaderInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}