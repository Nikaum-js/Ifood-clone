{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/nikaum/Projects/desafio-quaq/node_modules/@react-navigation/native/dist/createKeyboardAwareNavigator.js\";\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default (function (Navigator, navigatorConfig) {\n  var _class, _temp;\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(KeyboardAwareNavigator, _React$Component);\n\n    function KeyboardAwareNavigator() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, KeyboardAwareNavigator);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(KeyboardAwareNavigator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this._previouslyFocusedTextInput = null;\n\n      _this._handleGestureBegin = function () {\n        _this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.blurTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureBegin && _this.props.onGestureBegin();\n      };\n\n      _this._handleGestureCanceled = function () {\n        if (_this._previouslyFocusedTextInput) {\n          TextInput.State.focusTextInput(_this._previouslyFocusedTextInput);\n        }\n\n        _this.props.onGestureCanceled && _this.props.onGestureCanceled();\n      };\n\n      _this._handleGestureEnd = function () {\n        _this._previouslyFocusedTextInput = null;\n        _this.props.onGestureFinish && _this.props.onGestureFinish();\n      };\n\n      _this._handleTransitionStart = function (transitionProps, prevTransitionProps) {\n        if (transitionProps.index !== prevTransitionProps.index) {\n          var currentField = TextInput.State.currentlyFocusedField();\n\n          if (currentField) {\n            TextInput.State.blurTextInput(currentField);\n          }\n        }\n\n        var onTransitionStart = _this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n        onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n      };\n\n      return _this;\n    }\n\n    _createClass(KeyboardAwareNavigator, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Navigator, _extends({}, this.props, {\n          onGestureBegin: this._handleGestureBegin,\n          onGestureCanceled: this._handleGestureCanceled,\n          onGestureEnd: this._handleGestureEnd,\n          onTransitionStart: this._handleTransitionStart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          }\n        }));\n      }\n    }]);\n\n    return KeyboardAwareNavigator;\n  }(React.Component), _class.router = Navigator.router, _class.navigationOptions = Navigator.navigationOptions, _temp;\n});","map":{"version":3,"sources":["/home/nikaum/Projects/desafio-quaq/node_modules/@react-navigation/native/dist/createKeyboardAwareNavigator.js"],"names":["React","Navigator","navigatorConfig","_previouslyFocusedTextInput","_handleGestureBegin","TextInput","State","currentlyFocusedField","blurTextInput","props","onGestureBegin","_handleGestureCanceled","focusTextInput","onGestureCanceled","_handleGestureEnd","onGestureFinish","_handleTransitionStart","transitionProps","prevTransitionProps","index","currentField","onTransitionStart","Component","router","navigationOptions"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,gBAAgB,UAACC,SAAD,EAAYC,eAAZ;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YAGdC,2BAHc,GAGgB,IAHhB;;AAAA,YASdC,mBATc,GASQ,YAAM;AAC1B,cAAKD,2BAAL,GAAmCE,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAAnC;;AACA,YAAI,MAAKJ,2BAAT,EAAsC;AACpCE,UAAAA,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8B,MAAKL,2BAAnC;AACD;;AACD,cAAKM,KAAL,CAAWC,cAAX,IAA6B,MAAKD,KAAL,CAAWC,cAAX,EAA7B;AACD,OAfa;;AAAA,YAiBdC,sBAjBc,GAiBW,YAAM;AAC7B,YAAI,MAAKR,2BAAT,EAAsC;AACpCE,UAAAA,SAAS,CAACC,KAAV,CAAgBM,cAAhB,CAA+B,MAAKT,2BAApC;AACD;;AACD,cAAKM,KAAL,CAAWI,iBAAX,IAAgC,MAAKJ,KAAL,CAAWI,iBAAX,EAAhC;AACD,OAtBa;;AAAA,YAwBdC,iBAxBc,GAwBM,YAAM;AACxB,cAAKX,2BAAL,GAAmC,IAAnC;AACA,cAAKM,KAAL,CAAWM,eAAX,IAA8B,MAAKN,KAAL,CAAWM,eAAX,EAA9B;AACD,OA3Ba;;AAAA,YA6BdC,sBA7Bc,GA6BW,UAACC,eAAD,EAAkBC,mBAAlB,EAA0C;AAIjE,YAAID,eAAe,CAACE,KAAhB,KAA0BD,mBAAmB,CAACC,KAAlD,EAAyD;AACvD,cAAMC,YAAY,GAAGf,SAAS,CAACC,KAAV,CAAgBC,qBAAhB,EAArB;;AACA,cAAIa,YAAJ,EAAkB;AAChBf,YAAAA,SAAS,CAACC,KAAV,CAAgBE,aAAhB,CAA8BY,YAA9B;AACD;AACF;;AAED,YAAMC,iBAAiB,GAAG,MAAKZ,KAAL,CAAWY,iBAAX,IAAgCnB,eAAe,CAACmB,iBAA1E;AACAA,QAAAA,iBAAiB,IAAIA,iBAAiB,CAACJ,eAAD,EAAkBC,mBAAlB,CAAtC;AACD,OA1Ca;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAKL;AACP,eAAO,oBAAC,SAAD,eAAe,KAAKT,KAApB;AAA2B,UAAA,cAAc,EAAE,KAAKL,mBAAhD;AAAqE,UAAA,iBAAiB,EAAE,KAAKO,sBAA7F;AAAqH,UAAA,YAAY,EAAE,KAAKG,iBAAxI;AAA2J,UAAA,iBAAiB,EAAE,KAAKE,sBAAnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AAPa;;AAAA;AAAA,IAAqEhB,KAAK,CAACsB,SAA3E,UACPC,MADO,GACEtB,SAAS,CAACsB,MADZ,SAEPC,iBAFO,GAEavB,SAAS,CAACuB,iBAFvB;AAAA,CAAhB","sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default ((Navigator, navigatorConfig) => class KeyboardAwareNavigator extends React.Component {\n  static router = Navigator.router;\n  static navigationOptions = Navigator.navigationOptions;\n  _previouslyFocusedTextInput = null;\n\n  render() {\n    return <Navigator {...this.props} onGestureBegin={this._handleGestureBegin} onGestureCanceled={this._handleGestureCanceled} onGestureEnd={this._handleGestureEnd} onTransitionStart={this._handleTransitionStart} />;\n  }\n\n  _handleGestureBegin = () => {\n    this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n    if (this._previouslyFocusedTextInput) {\n      TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n    }\n    this.props.onGestureBegin && this.props.onGestureBegin();\n  };\n\n  _handleGestureCanceled = () => {\n    if (this._previouslyFocusedTextInput) {\n      TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n    }\n    this.props.onGestureCanceled && this.props.onGestureCanceled();\n  };\n\n  _handleGestureEnd = () => {\n    this._previouslyFocusedTextInput = null;\n    this.props.onGestureFinish && this.props.onGestureFinish();\n  };\n\n  _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n    // TODO: We should not even have received the transition start event\n    // in the case where the index did not change, I believe. We\n    // should revisit this after 2.0 release.\n    if (transitionProps.index !== prevTransitionProps.index) {\n      const currentField = TextInput.State.currentlyFocusedField();\n      if (currentField) {\n        TextInput.State.blurTextInput(currentField);\n      }\n    }\n\n    const onTransitionStart = this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n    onTransitionStart && onTransitionStart(transitionProps, prevTransitionProps);\n  };\n});"]},"metadata":{},"sourceType":"module"}