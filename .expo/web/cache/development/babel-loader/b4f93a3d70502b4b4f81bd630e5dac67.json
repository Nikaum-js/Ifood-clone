{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Header/HeaderBackButton.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MaskedView from \"../MaskedView\";\nimport TouchableItem from \"../TouchableItem\";\nimport useTheme from \"../../../utils/useTheme\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      _ref$labelVisible = _ref.labelVisible,\n      labelVisible = _ref$labelVisible === void 0 ? Platform.OS === 'ios' : _ref$labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      customPressColorAndroid = _ref.pressColorAndroid,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel;\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout == null ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      }\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      }\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      }\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(TouchableItem, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: label && label !== 'Back' ? label + \", back\" : 'Go back',\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    }\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    }\n  }, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","onLabelLayout","onPress","pressColorAndroid","customPressColorAndroid","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","dark","colors","useTheme","initialLabelWidth","setInitialLabelWidth","React","ios","default","handleLabelLayout","e","shouldTruncateLabel","renderBackImage","styles","Boolean","require","renderLabel","leftLabelText","labelElement","minWidth","color","handlePress","requestAnimationFrame","top","right","bottom","left","StyleSheet","container","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","iconMaskContainer","flex","justifyContent","iconMaskFillerRect","backgroundColor","iconMask","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nimport { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={\n        label && label !== 'Back' ? `${label}, back` : 'Go back'\n      }\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}