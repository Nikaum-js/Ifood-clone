{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/nikaum/Projects/ifood-clone/src/components/Suggestions/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from \"../../services/api\";\nimport { SuggestionList, Item, SuggestionImage, Title } from \"./styles\";\nexport default function Suggestions() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      suggestions = _useState2[0],\n      setSuggestions = _useState2[1];\n\n  useEffect(function () {\n    function loadSuggestions() {\n      var response;\n      return _regeneratorRuntime.async(function loadSuggestions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('suggestions'));\n\n            case 2:\n              response = _context.sent;\n              setSuggestions(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    loadSuggestions();\n  }, []);\n  return React.createElement(SuggestionList, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    }\n  }, suggestions.map(function (suggestion) {\n    return React.createElement(Item, {\n      key: suggestion.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      }\n    }, React.createElement(SuggestionImage, {\n      source: {\n        uri: suggestion.sugg_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      }\n    }), React.createElement(Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      }\n    }, suggestion.title));\n  }));\n}","map":{"version":3,"sources":["/home/nikaum/Projects/ifood-clone/src/components/Suggestions/index.js"],"names":["React","useState","useEffect","api","SuggestionList","Item","SuggestionImage","Title","Suggestions","suggestions","setSuggestions","loadSuggestions","get","response","data","map","suggestion","id","uri","sugg_url","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,GAAP;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,eAA/B,EAAgDC,KAAhD;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACEP,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MAC7BQ,WAD6B;AAAA,MAChBC,cADgB;;AAGpCR,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeS,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBR,GAAG,CAACS,GAAJ,CAAQ,aAAR,CADzB;;AAAA;AACQC,cAAAA,QADR;AAEEH,cAAAA,cAAc,CAACG,QAAQ,CAACC,IAAV,CAAd;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAH,IAAAA,eAAe;AAChB,GANQ,EAMN,EANM,CAAT;AAQA,SACE,oBAAC,cAAD;AAAgB,IAAA,UAAU,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,CAACM,GAAZ,CAAgB,UAAAC,UAAU;AAAA,WACzB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,UAAU,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEF,UAAU,CAACG;AAAlB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,UAAU,CAACI,KAAnB,CAFF,CADyB;AAAA,GAA1B,CADH,CADF;AAUD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport api from '../../services/api';\n\nimport { SuggestionList, Item, SuggestionImage, Title } from './styles';\n\nexport default function Suggestions() {\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    async function loadSuggestions() {\n      const response = await api.get('suggestions');\n      setSuggestions(response.data);\n    }\n    loadSuggestions();\n  }, []);\n\n  return (\n    <SuggestionList horizontal>\n      {suggestions.map(suggestion => (\n        <Item key={suggestion.id}>\n          <SuggestionImage source={{ uri: suggestion.sugg_url }} />\n          <Title>{suggestion.title}</Title>\n        </Item>\n      ))}\n    </SuggestionList>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}